* TODO
** ( ) Script
   When last, when next, status in notif and stdout.

* Preface
  To keep org files sane and in check you need an auto-syncing solution, capable of competently merging separate notes on machines together.

* Solutions
  In terms of solutions we have:
  - git-sync. [repo]{https://github.com/simonthum/git-sync}

  first one seems more preferable.

* Service
  I might want to have a service running that will sync up machines nightly or something - but that introduces an issue of not having them running all the time and some weird protocol issues. whatever, i bet cooler tools already got this stuff figured out.
  For `git-sync` over `fish` I have this little thingey:
  @code fish
  while true; nix run nixpkgs#git-sync; sleep $(math 60x 60); end
  @end
** Remote Login
   A good way of login is {:ssh-agent:}.

* git-sync
  Works in weird ways. Requires all changes to be unstaged before committing - huh.
  One nice idea is canceling commit when new files are present - `#...#` bullshit from emacs or `result` symlink from nix.
  While nice in theory, it can get cumbersome always calling `git-sync -n` on new files, which is a frequent occurance when doing notes.
  How about a patch that allows new files only if they are staged?
** Options
   - branch.$branch_name.syncNewFiles (bool)
   - branch.$branch_name.syncCommitMsg (string)
   - branch.$branch_name.autocommitscript (string)
