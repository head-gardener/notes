* Snippets
**  Branch visualisation
    @code  bash
    git log --graph --decorate --oneline --all
    @end
**  Grep history
    @code  bash
    git log --all --patch --oneline | rg foo
    @end
**  Sign all commits during interactive rebase.
   `git rebase -i origin/master` and insert `git commit --amend -S --no-edit` after each commit.

* ( ) Signatures
** ( ) GPG
** ( ) SSH
** ( ) Others

* ENV
  {https://git-scm.com/book/en/v2/Git-Internals-Environment-Variables}[Source].
  - `HOME` - where git looks for config.
  - `GIT_SSH_COMMAND` - ssh command to use, supports cli params.
  - `GIT_TRACE` - debugging.
  -- `_PACK_ACCESS` - access packfiles.
  -- `_PACKET` - network traces.
  -- `_PERFORMANCE` - time taken to execute subcommands.
  -- `_SETUP` - env information.
  - `GIT_AUTHOR_NAME` `GIT_AUTHOR_EMAIL` - exactly what it says.

* Tools
** {./git-syncing.html}[git-syncing]
**  gitk
    Weird ass GUI for git. Has visualisation, diffs and all the cool stuff cool kids use. Available in `nix shell nixpkgs#gitFull`.
**  ( ) LFS
    - ( ) {https://git-lfs.com/}[docs].
