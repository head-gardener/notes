* Site Reliability Engineer (SRE) Interview Preparation Guide

This repository is an attempt to consolidate useful resources for Site Reliability Engineer (SRE) interview preparation.

** Contributing

Please take a look at the {CONTRIBUTING.md}[contribution guidelines] first.
Contributions are always welcome!

** Basics

- (x) Simple: {https://syedali.net/2013/08/18/what-happens-when-you-type-in-www-cnn-com-in-your-browser}[What happens when you type in ‘www.cnn.com’ in your browser?]
- (x) Detailed: {https://github.com/alex/what-happens-when}[What happens when you type google.com into your browser's address box and press enter?]

** Linux

- (x) {https://www.youtube.com/watch?v=sWbUDq4S6Y8}[Introduction to Linux – Full Course for Beginners]
- (x) {https://biriukov.dev/docs/fd-pipe-session-terminal/0-sre-should-know-about-gnu-linux-shell-related-internals-file-descriptors-pipes-terminals-user-sessions-process-groups-and-daemons}[What every SRE should know about GNU/Linux shell related internals: file descriptors, pipes, terminals, user sessions, process groups and daemons]
- (x) {https://biriukov.dev/docs/page-cache/0-linux-page-cache-for-sre}[SRE deep dive into Linux Page Cache]

*** Boot Process

- ( ) {https://youtu.be/XpFsMB6FoOs}[How Does Linux Boot Process Work?]
- ( ) {https://opensource.com/article/17/2/linux-boot-and-startup}[An introduction to the Linux boot and startup processes]
- ( ) {https://www.cdn.geeksforgeeks.org/what-happens-when-we-turn-on-computer}[What happens when we turn on computer?]
- ( ) {https://leetcode.com/discuss/interview-question/125107/What-happens-when-we-turn-on-computer}[What happens when we turn on computer?]
- ( ) {http://www.scott-a-s.com/files/linux_boot.pdf}[From Power up to login prompt]

*** Filesystem

- ( ) {https://syedali.net/2015/02/08/understanding-inodes}[Understanding Inodes]
- ( ) {https://www.thegeekstuff.com/2012/01/linux-inodes}[Understand UNIX / Linux Inodes Basics with Examples]
- ( ) {https://syedali.net/2013/08/20/understanding-proc-filesystem}[Understanding proc filesystem]
- ( ) {https://syedali.net/2015/01/06/common-mount-options}[Common Mount Options]
- ( ) {https://opensource.com/article/18/4/ext4-filesystem}[Understanding Linux filesystems: ext4 and beyond]

*** Kernel

- ( ) {http://learnlinuxconcepts.blogspot.com/2014/03/explain-basics-of-linux-kernel.html}[Explain the basics of Linux kernel]
- ( ) {http://learnlinuxconcepts.blogspot.com/2014/02/kernel-space-and-user-space.html}[Kernel Space and User Space]
- ( ) {http://learnlinuxconcepts.blogspot.com/2014/03/process-management.html}[Linux Kernel Process Management]
- ( ) {http://learnlinuxconcepts.blogspot.com/2014/02/linux-addressing.html}[Linux Addressing]
- ( ) {http://learnlinuxconcepts.blogspot.com/2014/02/linux-memory-management.html}[Linux Kernel Memory Management]
- ( ) {http://learnlinuxconcepts.blogspot.com/2014/02/stack-and-heap.html}[STACK AND HEAP]
- ( ) {http://learnlinuxconcepts.blogspot.com/2014/02/paging-and-segmentation.html}[Paging and Segmentation]
- ( ) {http://learnlinuxconcepts.blogspot.com/2014/02/system-calls.html}[Linux Kernel System Calls]
- ( ) {http://learnlinuxconcepts.blogspot.com/2014/10/the-virtual-filesystem.html}[The Virtual Filesystem]
- ( ) {http://learnlinuxconcepts.blogspot.com/2014/07/concurrency-and-race-conditions.html}[Concurrency and Race Conditions]
- ( ) {https://stackoverflow.com/questions/312069/the-best-memory-leak-definition}[Memory Leak]
- ( ) {http://learnlinuxconcepts.blogspot.com/2014/07/what-is-kernel-panic.html}[What is a kernel Panic?]
- ( ) {https://0xax.gitbooks.io/linux-insides/content}[Book about the linux kernel]
- ( ) {https://reliabilityengineering.substack.com/p/everything-you-need-to-know-about}[Processes in Linux - Everything You Need to Know]

*** Troubleshooting

- ( ) {https://syedali.net/2013/08/20/linux-troubleshooting-tools}[Linux troubleshooting tools]
- ( ) {https://medium.com/netflix-techblog/linux-performance-analysis-in-60-000-milliseconds-accc10403c55}[Linux Performance Analysis in 60,000 Milliseconds]
- ( ) {https://www.dedoimedo.com/computers/strace.html}[strace]
- ( ) {https://www.dedoimedo.com/computers/lsof.html}[lsof]
- ( ) {https://www.dedoimedo.com/computers/linux-system-debugging-super.html}[Linux system debugging]
- ( ) {https://sadservers.com}[SaaS where users can test their Linux troubleshooting skills]

** Networking

- ( ) {https://explained-from-first-principles.com/internet}[The Internet explained from first principles]
- ( ) {https://www.destroyallsoftware.com/compendium/network-protocols?share_key=97d3ba4c24d21147}[Network protocols for anyone who knows a programming language]
- ( ) {https://developers.redhat.com/blog/2018/10/22/introduction-to-linux-interfaces-for-virtual-networking}[Introduction to Linux interfaces for virtual networking]
- ( ) {https://vincent.bernat.ch/en/blog/2018-multi-tier-loadbalancer}[Multi-tier load-balancing with Linux]
- ( ) {https://blog.envoyproxy.io/introduction-to-modern-network-load-balancing-and-proxying-a57f6ff80236}[Introduction to modern network load balancing and proxying]
- ( ) {https://syedali.net/2013/08/22/load-balancing-algorithms}[Load Balancing Algorithms]

** Containers

- ( ) {http://container.training/intro-selfpaced.yml.html}[Introduction to Docker and Containers]
- ( ) {https://l0rd.github.io/containerspatterns}[Containers Patterns]
- ( ) {https://blog.couchbase.com/docker-container-anti-patterns/}[Docker Container Anti Patterns]
- ( ) {https://jpetazzo.github.io/2021/11/30/docker-build-container-images-antipatterns}[Anti-Patterns When Building Container Images]

** Kubernetes

- ( ) {http://container.training/kube-selfpaced.yml.html}[Deploying and Scaling Microservices with Docker and Kubernetes]
- ( ) {https://asankov.dev/blog/2022/05/15/demystifying-the-kubernetes-iceberg-part-1}[Demystifying the Kubernetes Iceberg]
- ( ) {https://github.com/jamiehannaford/what-happens-when-k8s/blob/master/README.md}[What happens when ... Kubernetes edition!]
- ( ) {https://github.com/gravitational/workshop/blob/master/k8sprod.md}[Kubernetes Production Patterns]
- ( ) {https://learnk8s.io/production-best-practices}[Kubernetes production best practices]
- ( ) {https://sookocheff.com/post/kubernetes/understanding-kubernetes-networking-model}[A Guide to the Kubernetes Networking Model]
- ( ) {https://ymmt2005.hatenablog.com/entry/k8s-things}[47 Things To Become a Kubernetes Expert]
- ( ) {https://github.com/diegolnasc/kubernetes-best-practices}[Kubernetes Best Practices 101]
- ( ) {https://spacelift.io/blog/kubernetes-best-practices}[15 Kubernetes Best Practices Every Developer Should Know]
- ( ) {https://www.tkng.io}[THE KUBERNETES NETWORKING GUIDE]
- ( ) {https://www.nslookup.io/learning/the-life-of-a-dns-query-in-kubernetes}[The life of a DNS query in Kubernetes]
- ( ) {https://itnext.io/kubernetes-yaml-tips-and-tricks-904a2c0b2b81}[Kubernetes YAML tips and tricks]
- ( ) {https://github.com/techiescamp/kubernetes-learning-path}[Kubernetes Learning Roadmap]

** Infrastructure as code / Configuration management

- ( ) {https://learn.hashicorp.com/terraform}[Terraform]
- (x) {https://blog.gruntwork.io/a-comprehensive-guide-to-terraform-b3d32832baca}[A Comprehensive Guide to Terraform]
- ( ) {https://github.com/leucos/ansible-tuto}[Ansible]
- (_) {https://spacelift.io/blog/terraform-tutorial}[Getting Started With Terraform on AWS]
- (?) {https://cloud.google.com/docs/terraform/best-practices-for-terraform}[Google Cloud: Best practices for using Terraform]
- ( ) {https://roadmap.sh/terraform}[Terraform Roadmap]

** Databases

- ( ) {https://architecturenotes.co/things-you-should-know-about-databases}[Things You Should Know About Databases]
- ( ) {https://youtu.be/W2Z7fbCLSTw}[7 Database Paradigms]
- ( ) {https://en.wikipedia.org/wiki/CAP_theorem}[CAP theorem]
- ( ) {https://martinfowler.com/articles/evodb.html}[Evolutionary Database Design]
- ( ) {https://medium.com/geekculture/acid-vs-base-in-databases-1bcad774da26}[ACID vs BASE in Databases]
- ( ) {https://www.digitalocean.com/community/tutorials/understanding-database-sharding}[Understanding Database Sharding]
- ( ) {https://galeracluster.com/library/documentation/tech-desc-introduction.html*database-replication}[Database Replication]
- ( ) {https://towardsdatascience.com/datastore-choices-sql-vs-nosql-database-ebec24d56106}[SQL vs. NoSQL Database: When to Use, How to Choose]
- ( ) {https://planetscale.com/blog/how-do-database-indexes-work}[How do database indexes work?]
- ( ) {https://architecturenotes.co/redis}[Redis Explained]
- ( ) {https://architecturenotes.co/database-sharding-explained}[Database Sharding Explained]
- ( ) {https://highscalability.com/untitled-2}[Kafka 101]

** CI/CD

- ( ) {https://martinfowler.com/articles/continuousIntegration.html}[Continuous Integration]
- ( ) {https://www.singlestoneconsulting.com/blog/7-pipeline-design-patterns-for-continuous-delivery}[7 Pipeline Design Patterns for Continuous Delivery]
- ( ) {https://continuousdelivery.com/implementing/patterns}[CI/CD patterns]
- ( ) {https://thenewstack.io/deployment-strategies}[Six Strategies for Application Deployment]

** Clouds

- ( ) {https://github.com/open-guides/og-aws}[The Open Guide to Amazon Web Services]
- ( ) {https://docs.microsoft.com/en-us/learn/azure/}[Learning Azure]
- ( ) {https://cloud.google.com/training/badges}[Hands-On Training with GCP]

** Programming

*** Python

- ( ) {https://pythonbasics.org/}[Python Basics]
- ( ) {https://www.py4e.com/}[Python For Everyone]
- ( ) {https://www.scaler.com/topics/python/}[Complete Python Tutorial]

*** Go (Golang)

- ( ) {https://tour.golang.org}[A tour of Go]
- ( ) {https://gobyexample.com}[Go by Example]
- ( ) {https://gosamples.dev}[Go Tutorials & Examples]
- ( ) {https://quii.gitbook.io/learn-go-with-tests/}[Learn Go with Tests]
- ( ) {http://www.golangprograms.com}[Getting up and running with Go]
- ( ) {https://golang.org/doc/effective_go.html}[Effective Go]
- ( ) {https://github.com/tmrts/go-patterns}[Go Design Patterns]
- ( ) {https://povilasv.me/go-memory-management}[Go Memory Management]
- ( ) {https://google.github.io/styleguide/go/guide}[Style Guide]
- ( ) {https://google.github.io/styleguide/go/decisions}[Style Decisions]
- ( ) {https://google.github.io/styleguide/go/best-practices}[Best Practices]
- ( ) {https://devs.cloudimmunity.com/gotchas-and-common-mistakes-in-go-golang}[50 Shades of Go: Traps, Gotchas, and Common Mistakes for New Golang Devs]

*** Big O Notation, Algorithms and Data Structures

- ( ) {https://www.algoexpert.io}[AlgoExpert]
- ( ) {http://courses.csail.mit.edu/iap/interview/Hacking_a_Google_Interview_Handout_1.pdf}[Hacking a Google Interview – Handout 1]
- ( ) {http://courses.csail.mit.edu/iap/interview/Hacking_a_Google_Interview_Handout_2.pdf}[Hacking a Google Interview – Handout 2]
- ( ) {http://courses.csail.mit.edu/iap/interview/Hacking_a_Google_Interview_Handout_3.pdf}[Hacking a Google Interview – Handout 3]

** System design

- ( ) {https://www.algoexpert.io/systems/product}[SystemsExpert course from AlgoExpert]
- ( ) {https://github.com/ByteByteGoHq/system-design-101}[System Design 101]
- ( ) {https://www.educative.io/courses/grokking-modern-system-design-interview-for-engineers-managers}[Grokking the System Design Interview]
- ( ) {https://github.com/donnemartin/system-design-primer}[The System Design Primer]
- ( ) {https://tianpan.co/notes/2016-02-13-crack-the-system-design-interview}[Crack the System Design Interview]
- ( ) {https://github.com/checkcheckzz/system-design-interview}[System design interview for IT companies]
- ( ) {https://medium.com/storyblocks-engineering/web-architecture-101-a3224e126947}[Web Architecture 101]
- ( ) {https://web.archive.org/web/20210106095747/http://stephenmann.io/post/whats-in-a-production-web-application}[What's in a Production Web Application?]
- ( ) {http://book.mixu.net/distsys/single-page.html}[Distributed systems]
- ( ) {https://blog.alexewerlof.com/p/failover}[Failover]
- ( ) {https://architecturenotes.co/granularity-of-systems}[Monoliths, Service Architecture, and Microservices]
- ( ) {https://bytebytego.com/courses/system-design-interview/scale-from-zero-to-millions-of-users}[Scale From Zero To Millions Of Users]

*** System design examples

- ( ) {http://highscalability.com/blog/2022/1/3/designing-whatsapp.html}[Designing WhatsApp]
- ( ) {http://highscalability.com/blog/2022/1/25/designing-uber.html}[Designing Uber]
- ( ) {http://highscalability.com/blog/2022/1/17/designing-tinder.html}[Designing Tinder]
- ( ) {http://highscalability.com/blog/2022/1/11/designing-instagram.html}[Designing Instagram]
- ( ) {http://highscalability.com/blog/2021/12/13/designing-netflix.html}[Designing Netflix]

** Monitoring

- ( ) {https://sre.google/workbook/implementing-slos/}[Implementing SLOs]
- ( ) {https://amitosh.medium.com/the-whys-and-what-s-of-setting-up-service-monitoring-cc1c165ee088}[Setting up Service Monitoring — The Why’s and What’s]
- ( ) {https://youtu.be/lJ8ydIuPFeU}[How NOT to Measure Latency]
- ( ) {https://sysdig.com/blog/golden-signals-kubernetes}[The four Golden Signals of Kubernetes monitoring]

*** Prometheus

- ( ) {https://training.promlabs.com/training/introduction-to-prometheus/training-overview/introduction}[Introduction to Prometheus]
- ( ) {https://training.promlabs.com/training/relabeling/training-overview/prerequisites}[Prometheus Relabeling Training]
- ( ) {https://promlabs.com/blog/2022/12/11/avoid-these-6-mistakes-when-getting-started-with-prometheus}[Avoid These 6 Mistakes When Getting Started With Prometheus]
- ( ) {https://www.timescale.com/blog/four-types-prometheus-metrics-to-collect}[A Deep Dive Into the Four Types of Prometheus Metrics]
- ( ) {https://www.timescale.com/blog/how-prometheus-querying-works-and-why-you-should-care}[How Prometheus Querying Works]
- ( ) {https://promlabs.com/promql-cheat-sheet}[PromQL Cheat Sheet]

** Processes

- ( ) {https://incident.io/guide}[The practical guide to incident management]
- ( ) {https://response.pagerduty.com}[Incident Response]
- ( ) {https://postmortems.pagerduty.com}[Postmortems]
- ( ) {https://www.transposit.com/devops-blog/itsm/what-makes-a-good-runbook}[Runbooks]
- ( ) {https://cloud.google.com/blog/products/management-tools/identifying-and-tracking-toil-using-sre-principles}[Identifying and tracking toil using SRE principles]
- ( ) {https://medium.com/ibm-garage/building-sre-from-scratch-485e23985bbd}[Building SRE from Scratch]
- ( ) {https://cloud.google.com/blog/products/devops-sre/sre-at-google-our-complete-list-of-cre-life-lessons}[SRE at Google: Our complete list of CRE life lessons]
- ( ) {https://rootly.io/blog/incident-management-vs-incident-response-what-s-the-difference}[Incident Management vs. Incident Response - What's the Difference?]
- ( ) {https://rootly.io/blog/practical-guide-to-sre-using-slos-to-increase-reliability}[Practical Guide to SRE: Using SLOs to Increase Reliability]
- ( ) {https://rootly.io/blog/practical-guide-to-sre-automating-on-call}[Practical Guide to SRE: Automating On-Call]
- ( ) {https://www.squadcast.com/blog/going-from-zero-to-sre}[Going from Zero to SRE]
- ( ) {https://blog.danslimmon.com/2019/06/24/an-incident-command-training-handbook}[An Incident Command Training Handbook]
- ( ) {https://www.jeli.io/howie/welcome}[Howie guide to post‑incident investigations]
- ( ) {https://www.srepath.com/rundown-of-linkedins-sre-practices}[Rundown of LinkedIn’s SRE practices]
- ( ) {https://www.srepath.com/rundown-of-uber-sre-practice}[Rundown of Uber’s SRE practice]
- ( ) {https://blog.relyabilit.ie/sre-in-the-real-world}[SRE in the Real World]
- ( ) {https://certomodo.substack.com/p/sre-engagement-models}[SRE Engagement Models]
- ( ) {https://github.com/bregman-arie/sre-checklist}[SRE Checklist]
- ( ) {https://blog.alexewerlof.com/p/why-bother-with-sli-and-slo}[Why bother with SLI and SLO?]
- ( ) {https://www.codereliant.io/the-system-resiliency-pyramid}[The System Resiliency Pyramid]
- ( ) {https://www.srepath.com/10-tips-for-onboarding-new-sre-hires}[10 Tips for Onboarding New SRE Hires]
- ( ) {https://www.srepath.com/starting-sre-at-startups-and-smaller-organizations}[Starting SRE at startups and smaller organizations]
- ( ) {https://reliabilityengineering.substack.com/p/things-that-makes-a-good-site-reliability}[Things That Makes a Good Site Reliability Engineer]
- ( ) {https://cloud.google.com/blog/products/devops-sre/how-sre-teams-are-organized-and-how-to-get-started}[How SRE teams are organized, and how to get started]

** Resume

- ( ) {https://rootly.com/blog/sre-complete-resume-writing-guide}[SRE Complete Resume Writing Guide]

** Interview

*** SRE interview process

- ( ) {https://syedali.net/2014/04/01/how-to-hire-talent}[How to hire talent]
- ( ) {https://web.archive.org/web/20220328124724/http://lambda-startup.com/recruitment-process-for-a-google-job-sre-site-reliability-engineer}[Recruitment process for a Google job (SRE, Site Reliability Engineer)]

*** Interview Questions

- ( ) {https://github.com/michael-kehoe/sre-interview}[A collection of questions to practice with for SRE interviews]
- ( ) {https://syedali.net/engineer-interview-questions}[SRE Interview Questions]
- ( ) {https://github.com/trimstray/test-your-sysadmin-skills}[Sysadmin Test Questions]
- ( ) {https://enterprisersproject.com/article/2019/2/kubernetes-job-interview-questions-how-prepare}[Kubernetes job interview questions]
- ( ) {https://github.com/Tikam02/DevOps-Guide}[DevOps Guide]
- ( ) {https://dev.to/logan/questions-i-ask-in-sre-interviews-a9j}[Questions I ask in SRE interviews]
- ( ) {https://roadmap.sh/devops}[DevOps Roadmap: Learn to become a DevOps Engineer or SRE]
- ( ) {https://devopsknowledge.hashnode.dev/the-must-know-terraform-interview-questions}[The Must-Know Terraform Interview Questions]

*** Blogposts

- ( ) {http://blog.marc-seeger.de/2015/05/01/sre-interviews-in-silicon-valley}[SRE Interviews in Silicon Valley]
- ( ) {https://blog.balthazar-rouberol.com/preparing-the-sre-interview}[Preparing the SRE interview]
- ( ) {https://blog.alicegoldfuss.com/how-to-get-into-sre}[How to Get Into SRE]
- ( ) {https://catonmat.net/my-job-interview-at-google}[My Job Interview at Google]
- ( ) {https://danrl.com/srm}[Path to Site Reliability Management]
- ( ) {https://www.tik.dev/blog/becoming-an-sre}[Becoming a Site Reliability Engineer]
- ( ) {https://fabrizio2210.medium.com/how-i-get-a-job-at-google-as-sre-83d44aef7859}[How I get a job at Google as SRE]
- ( ) {https://devopscube.com/become-devops-engineer}[Become A DevOps Engineer in 2023: [Detailed Guide]]
- ( ) {https://certomodo.substack.com/p/how-to-get-an-sre-role}[How to Get an SRE Role]
- ( ) {https://www.scaler.com/blog/devops-career-path/}[DevOps Career Path]
- ( ) {https://www.scaler.com/blog/devops-engineer-skills/}[Key DevOps Engineer Skills You Need in 2024]

** Books

*** SRE books

- ( ) {https://sre.google/sre-book/table-of-contents}[Site Reliability Engineering]
- ( ) {https://sre.google/workbook/table-of-contents}[The Site Reliability Workbook]
- ( ) {https://books.google.ru/books?id=tmhqDwAAQBAJ}[Seeking SRE]
- ( ) {https://sre.google/books/building-secure-reliable-systems}[Building Secure and Reliable Systems]
- ( ) {https://learning.oreilly.com/library/view/implementing-service-level/9781492076803}[Implementing Service Level Objectives]

*** Linux

- ( ) {https://www.amazon.com/Linux-Kernel-Development-Robert-Love/dp/0672329468}[Linux Kernel Development (3rd Edition)]
- ( ) {https://www.amazon.com/UNIX-Linux-System-Administration-Handbook/dp/0134277554}[UNIX and Linux System Administration Handbook (5th Edition)]
- ( ) {http://shop.oreilly.com/product/0636920040927.do}[Linux Pocket Guide, 3rd Edition]

*** Networking

- ( ) {https://www.amazon.com/TCP-Illustrated-Protocols-Addison-Wesley-Professional/dp/0321336313}[TCP/IP Illustrated, Volume 1]

*** Troubleshooting and Performance

- ( ) {https://www.amazon.com/Systems-Performance-Enterprise-Brendan-Gregg/dp/0133390098}[Systems Performance: Enterprise and the Cloud]
- ( ) {https://www.informit.com/store/systems-performance-9780136820154?ranMID=24808}[Systems Performance, 2nd Edition]

* Courses

- ( ) {https://www.coursera.org/learn/site-reliability-engineering-slos}[Site Reliability Engineering: Measuring and Managing Reliability]
- ( ) {https://linkedin.github.io/school-of-sre}[School of SRE]

