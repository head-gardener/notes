* Intro
Take notes you weirdo

* Readup
  [Tutorials]{https://www.youtube.com/watch?v=NnmRVY22Lq8&list=PLx2ksyallYzVI8CN1JMXhEf62j2AijeDa}.
  [Repo]{https://github.com/nvim-neorg/neorg}.

* General
  - folds work as expected (mostly)

* TODO
  - ( ) set spell, lbr, column and sum else on .norg filetype.
  - ( ) keys for quickly opening `:Neorg *` minibuffer (if similar solution doesn't exist).
  - ( ) folding works really weirdly.
  - ( ) it would be nicer to run neorg in a separate tab or smth.
  - ( ) how do you export todo's
  - (=) a graph would be nice

* Keys
  We got some keys:
  - <l>nn - new note.
  - <l>t - mark TODO as... .

* Modules
** Dirman
   Control workspaces. Can set default. [wiki]{https://github.com/nvim-neorg/neorg/wiki/Dirman}.
** Tangling
   Export code blocks. Usage: `#tangle <file>`. [wiki]{https://github.com/nvim-neorg/neorg/wiki/Tangling}.
** Looking Glass
   Edit code blocks in a separate buffer via `:Neorg keybind all core.looking-glass.magnify-code-block`.
** ( ) keybinds
   [wiki]{https://github.com/nvim-neorg/neorg/wiki/User-Keybinds}.

* Usage
** Workspaces
   Idea here is to open a neorg instance while doing something else - i.e. configuring nix or writing code.
   - `Neorg workspace <name>` - open neorg workspace
   - `Neorg index` - open index file
   - `Neorg return` - close all norg buffers and return to whatever you where doing.
** TODO
   - `<Ctrl+Space>` - toggles state (huh) .
   - More types are in the `help neorg.
   - To reveal what actual character corresponds to a state, toggle concealer with `Neorg toggle-concealer.`
   - nested TODO lists will propagate their changes to children.
** concealer
   Toggle with 'toggle-concealer'.
   Can be configured, e.g. change icons for TODO statuses. But *don't* touch performance settings lol. There are some nice icon sets there, might wanna look.

** Links
   - {* intro} - heading (white space, case insensitive).
   - {** concealer} - remember to duplicate the amount of `*`.
   - {# tangling} - `#` is a *magic char*, searching a file and linking to first occurrence in a heading.
   - {# error} - invalid links can be auto fixed, and the algorithm is pretty good, so you can use it to quickly create headings.
   - {# links}[links] - link comes *first*, then the description! Otherwise it's an anchor.
   - (?) how the hell do you fold links?
   - (!) rewrite anchors to links!
   - ( ) anchors?
   - {:neorg:# readup} - links in files.
